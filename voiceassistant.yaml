esphome:
  name: voiceassistant
  friendly_name: "Voice Assistant"

esp32:
  board: esp32-s3-devkitc-1
  flash_size: 16MB
  cpu_frequency: 240MHZ
  framework:
    type: esp-idf

psram:
  mode: octal
  speed: 80MHz

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: ""



i2s_audio:
  - id: speaker_i2s
    i2s_lrclk_pin: GPIO01
    i2s_bclk_pin: GPIO02

  - id: microphone_i2s
    i2s_lrclk_pin: GPIO06  # WS
    i2s_bclk_pin: GPIO05  # SCK

###### speaker
speaker:
  platform: i2s_audio
  id: speaker_id
  dac_type: external
  i2s_audio_id: speaker_i2s
  i2s_dout_pin: GPIO42
  channel: stereo  # let MAX98357 mix into mono
  sample_rate: 44100
  bits_per_sample: 16bit

media_player:
  platform: speaker
  id: player_id
  name: "Media Player"
  announcement_pipeline:
    speaker: speaker_id
  buffer_size: 1000000
  #on_announcement:
  #  - if:
  #      condition:
  #        - microphone.is_capturing:
  #      then:
  #        - script.execute: stop_wake_word
  #  - light.turn_on:
  #      id: led
  #      blue: 100%
  #      red: 0%
  #      green: 0%
  #      brightness: 70%
  #      effect: none
  #on_idle:
  #  - script.execute: start_wake_word
  #  - script.execute: reset_led
  files:
    - id: notify_sound
      file: "https://github.com/krrr/esphome_va/raw/main/sounds/notify.wav"


###### microphone
microphone:
  platform: i2s_audio
  id: mic_id
  i2s_audio_id: microphone_i2s
  adc_type: external
  # sample_rate must be 16000, voice assistant component restrict
  bits_per_sample: 32bit
  channel: left
  i2s_din_pin: GPIO04  # SD
  pdm: false

###### rgb light
light:
  platform: esp32_rmt_led_strip
  rgb_order: GRB
  pin: GPIO48
  num_leds: 1
  chipset: ws2812
  name: "RGB Light"
  id: led
  effects:
  - pulse:
      name: "Slow Pulse"
      transition_length: 250ms
      update_interval: 250ms
      min_brightness: 50%
      max_brightness: 100%
  - pulse:
      name: "Fast Pulse"
      transition_length: 100ms
      update_interval: 100ms
      min_brightness: 50%
      max_brightness: 100%

###### assistant
voice_assistant:
  id: va
  microphone:
    microphone: mic_id
    gain_factor: 4
  media_player: player_id  # output
  micro_wake_word:  # Configuring this allows Home Assistant to change which wake word model is enabled
  use_wake_word: false  # because using micro wake word
  noise_suppression_level: 2
  auto_gain: 22dBFS
  on_start:
    - script.execute: stop_wake_word
  on_listening:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 100%
        effect: "Slow Pulse"
  on_stt_vad_end:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 100%
        effect: "Fast Pulse"
  on_tts_start:
    - light.turn_on:
        id: led
        blue: 0%
        red: 0%
        green: 100%
        brightness: 100%
        effect: none
  on_end:
    # Handle the "nevermind" case where there is no announcement
    - wait_until:
        condition:
          - media_player.is_announcing:
        timeout: 0.5s
    # Restart
    - wait_until:
        - and:
            - not:
                voice_assistant.is_running:
            - not:
                speaker.is_playing:
    - script.execute: start_wake_word
    - script.execute: reset_led
  on_error:
    - light.turn_on:
        id: led
        red: 100%
        green: 0%
        blue: 0%
        brightness: 100%
        effect: none
    - delay: 2s
    - script.execute: reset_led
  on_client_connected:
    - delay: 2s  # Give the api server time to settle
    - script.execute: start_wake_word
  on_client_disconnected:
    - script.execute: stop_wake_word

    
micro_wake_word:
  on_wake_word_detected:
    - voice_assistant.start:
        wake_word: !lambda return wake_word;
    - media_player.speaker.play_on_device_media_file:
        media_file: notify_sound
        announcement: true
  vad:
    model: "github://esphome/micro-wake-word-models/models/v2/vad.json@main"
  models:
    - model: "github://esphome/micro-wake-word-models/models/v2/okay_nabu.json@main"
    - model: "github://esphome/micro-wake-word-models/models/v2/hey_jarvis.json@main"


ota:
  - platform: esphome
    password: ""

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "VA Fallback Hotspot"
    password: "123456789"

captive_portal:

sensor:
  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: 60s

script:
  - id: reset_led
    then:
      - light.turn_off: led

  - id: start_wake_word
    then:
      - if:
          condition:
            - not:
                - voice_assistant.is_running:
          then:
            - micro_wake_word.start:

  - id: stop_wake_word
    then:
      - micro_wake_word.stop:
